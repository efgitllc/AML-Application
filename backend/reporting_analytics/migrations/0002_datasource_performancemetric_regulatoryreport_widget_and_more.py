# Generated by Django 5.2.4 on 2025-07-09 11:27

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reporting_analytics', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('source_type', models.CharField(choices=[('DATABASE', 'Database Query'), ('API', 'API Endpoint'), ('FILE', 'File Import'), ('CALCULATED', 'Calculated Field')], max_length=50)),
                ('connection_config', models.JSONField(default=dict, help_text='Connection configuration')),
                ('query_config', models.JSONField(default=dict, help_text='Query or retrieval configuration')),
                ('schema', models.JSONField(default=dict, help_text='Data schema definition')),
                ('refresh_schedule', models.JSONField(default=dict, help_text='Data refresh schedule')),
                ('is_active', models.BooleanField(default=True)),
                ('last_refresh', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'data source',
                'verbose_name_plural': 'data sources',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_category', models.CharField(choices=[('SYSTEM', 'System Performance'), ('BUSINESS', 'Business Performance'), ('COMPLIANCE', 'Compliance Performance'), ('USER', 'User Performance')], max_length=50)),
                ('value', models.FloatField()),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('threshold_warning', models.FloatField(blank=True, null=True)),
                ('threshold_critical', models.FloatField(blank=True, null=True)),
                ('measurement_time', models.DateTimeField()),
                ('tags', models.JSONField(default=dict, help_text='Metric tags and labels')),
            ],
            options={
                'verbose_name': 'performance metric',
                'verbose_name_plural': 'performance metrics',
                'ordering': ['-measurement_time'],
            },
        ),
        migrations.CreateModel(
            name='RegulatoryReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('report_type', models.CharField(choices=[('STR', 'Suspicious Transaction Report'), ('SAR', 'Suspicious Activity Report'), ('CTR', 'Cash Transaction Report'), ('FBAR', 'Foreign Bank Account Report'), ('8300', 'Form 8300'), ('GOAML', 'goAML Report'), ('FINTRAC', 'FINTRAC Report'), ('OTHER', 'Other Regulatory Report')], max_length=50)),
                ('reporting_period_start', models.DateField()),
                ('reporting_period_end', models.DateField()),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('IN_REVIEW', 'In Review'), ('APPROVED', 'Approved'), ('SUBMITTED', 'Submitted'), ('ACKNOWLEDGED', 'Acknowledged'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=20)),
                ('reference_number', models.CharField(blank=True, help_text='Reference number from regulatory authority', max_length=100)),
                ('data', models.JSONField(default=dict, help_text='Report data in structured format')),
                ('file_path', models.FileField(blank=True, null=True, upload_to='regulatory_reports/%Y/%m/')),
            ],
            options={
                'verbose_name': 'regulatory report',
                'verbose_name_plural': 'regulatory reports',
                'ordering': ['-due_date'],
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('widget_type', models.CharField(choices=[('CHART', 'Chart'), ('TABLE', 'Table'), ('METRIC', 'Metric'), ('MAP', 'Map'), ('TIMELINE', 'Timeline'), ('GAUGE', 'Gauge'), ('TEXT', 'Text')], max_length=50)),
                ('configuration', models.JSONField(default=dict, help_text='Widget configuration and settings')),
                ('data_source', models.JSONField(default=dict, help_text='Data source configuration')),
                ('size', models.JSONField(default=dict, help_text='Widget size configuration')),
                ('position', models.JSONField(default=dict, help_text='Widget position on dashboard')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'analytics widget',
                'verbose_name_plural': 'analytics widgets',
                'ordering': ['name'],
            },
        ),
        migrations.RemoveField(
            model_name='analyticsdashboard',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='analyticsdashboard',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='analyticsdashboard',
            name='shared_with',
        ),
        migrations.RemoveField(
            model_name='analyticsdashboard',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='dashboardwidget',
            name='dashboard',
        ),
        migrations.RemoveField(
            model_name='compliancereport',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='compliancereport',
            name='submitted_by',
        ),
        migrations.RemoveField(
            model_name='compliancereport',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='dashboardwidget',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='dashboardwidget',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='generatedreport',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='generatedreport',
            name='generated_by',
        ),
        migrations.RemoveField(
            model_name='generatedreport',
            name='template',
        ),
        migrations.RemoveField(
            model_name='generatedreport',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='metricvalue',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='metricvalue',
            name='metric',
        ),
        migrations.RemoveField(
            model_name='metricvalue',
            name='updated_by',
        ),
        migrations.AlterModelOptions(
            name='analyticsmetric',
            options={'ordering': ['-period_end'], 'verbose_name': 'analytics metric', 'verbose_name_plural': 'analytics metrics'},
        ),
        migrations.AlterModelOptions(
            name='dashboard',
            options={'ordering': ['name'], 'verbose_name': 'dashboard', 'verbose_name_plural': 'dashboards'},
        ),
        migrations.AlterModelOptions(
            name='reportexecution',
            options={'ordering': ['-start_time'], 'verbose_name': 'report execution', 'verbose_name_plural': 'report executions'},
        ),
        migrations.RemoveIndex(
            model_name='analyticsmetric',
            name='reporting_a_metric__89b5f4_idx',
        ),
        migrations.RemoveIndex(
            model_name='report',
            name='reporting_a_report__b31b6f_idx',
        ),
        migrations.RemoveIndex(
            model_name='report',
            name='reporting_a_owner_d85296_idx',
        ),
        migrations.RemoveIndex(
            model_name='reportexecution',
            name='reporting_a_report__c9444b_idx',
        ),
        migrations.RemoveIndex(
            model_name='reportexecution',
            name='reporting_a_status_b3f362_idx',
        ),
        migrations.RemoveIndex(
            model_name='reporttemplate',
            name='reporting_a_report__7afc1d_idx',
        ),
        migrations.RemoveIndex(
            model_name='reporttemplate',
            name='reporting_a_owner_i_24d902_idx',
        ),
        migrations.RenameField(
            model_name='analyticsmetric',
            old_name='name',
            new_name='metric_name',
        ),
        migrations.RenameField(
            model_name='reportexecution',
            old_name='completed_at',
            new_name='end_time',
        ),
        migrations.RenameField(
            model_name='reportexecution',
            old_name='started_at',
            new_name='start_time',
        ),
        migrations.RemoveField(
            model_name='analyticsmetric',
            name='calculation_method',
        ),
        migrations.RemoveField(
            model_name='analyticsmetric',
            name='current_value',
        ),
        migrations.RemoveField(
            model_name='analyticsmetric',
            name='historical_values',
        ),
        migrations.RemoveField(
            model_name='analyticsmetric',
            name='last_updated',
        ),
        migrations.RemoveField(
            model_name='analyticsmetric',
            name='thresholds',
        ),
        migrations.RemoveField(
            model_name='dashboard',
            name='is_template',
        ),
        migrations.RemoveField(
            model_name='report',
            name='data_sources',
        ),
        migrations.RemoveField(
            model_name='report',
            name='frequency',
        ),
        migrations.RemoveField(
            model_name='report',
            name='is_public',
        ),
        migrations.RemoveField(
            model_name='report',
            name='is_scheduled',
        ),
        migrations.RemoveField(
            model_name='report',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='report',
            name='schedule_config',
        ),
        migrations.RemoveField(
            model_name='report',
            name='shared_with',
        ),
        migrations.RemoveField(
            model_name='report',
            name='template',
        ),
        migrations.RemoveField(
            model_name='reportexecution',
            name='error_details',
        ),
        migrations.RemoveField(
            model_name='reportexecution',
            name='execution_id',
        ),
        migrations.RemoveField(
            model_name='reportexecution',
            name='execution_metrics',
        ),
        migrations.RemoveField(
            model_name='reportexecution',
            name='result_file',
        ),
        migrations.RemoveField(
            model_name='reporttemplate',
            name='data_sources',
        ),
        migrations.RemoveField(
            model_name='reporttemplate',
            name='is_system',
        ),
        migrations.RemoveField(
            model_name='reporttemplate',
            name='output_formats',
        ),
        migrations.RemoveField(
            model_name='reporttemplate',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='reporttemplate',
            name='query_definition',
        ),
        migrations.RemoveField(
            model_name='reporttemplate',
            name='report_type',
        ),
        migrations.RemoveField(
            model_name='reporttemplate',
            name='schedule',
        ),
        migrations.RemoveField(
            model_name='reporttemplate',
            name='shared_with',
        ),
        migrations.RemoveField(
            model_name='reporttemplate',
            name='visualization_config',
        ),
        migrations.AddField(
            model_name='analyticsmetric',
            name='category',
            field=models.CharField(choices=[('CUSTOMER', 'Customer Metrics'), ('TRANSACTION', 'Transaction Metrics'), ('ALERT', 'Alert Metrics'), ('CASE', 'Case Metrics'), ('COMPLIANCE', 'Compliance Metrics'), ('RISK', 'Risk Metrics'), ('OPERATIONAL', 'Operational Metrics')], default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='analyticsmetric',
            name='dimensions',
            field=models.JSONField(default=dict, help_text='Dimensional attributes for the metric'),
        ),
        migrations.AddField(
            model_name='analyticsmetric',
            name='period_end',
            field=models.DateTimeField(default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='analyticsmetric',
            name='period_start',
            field=models.DateTimeField(default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='analyticsmetric',
            name='value',
            field=models.DecimalField(decimal_places=4, default=django.utils.timezone.now, max_digits=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='dashboard',
            name='permissions',
            field=models.JSONField(default=dict, help_text='User/role permissions for the dashboard'),
        ),
        migrations.AddField(
            model_name='dashboard',
            name='refresh_interval',
            field=models.IntegerField(default=300, help_text='Refresh interval in seconds', validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(3600)]),
        ),
        migrations.AddField(
            model_name='dashboard',
            name='widgets',
            field=models.JSONField(default=list, help_text='List of dashboard widgets'),
        ),
        migrations.AddField(
            model_name='report',
            name='format',
            field=models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON'), ('HTML', 'HTML')], default='PDF', max_length=20),
        ),
        migrations.AddField(
            model_name='report',
            name='recipients',
            field=models.JSONField(default=list, help_text='List of report recipients'),
        ),
        migrations.AddField(
            model_name='report',
            name='schedule',
            field=models.JSONField(default=dict, help_text='Report scheduling configuration'),
        ),
        migrations.AddField(
            model_name='reportexecution',
            name='error_message',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='reportexecution',
            name='execution_time',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reportexecution',
            name='file_path',
            field=models.FileField(blank=True, null=True, upload_to='reports/%Y/%m/'),
        ),
        migrations.AddField(
            model_name='reportexecution',
            name='file_size',
            field=models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='reportexecution',
            name='record_count',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='reporttemplate',
            name='styling',
            field=models.JSONField(default=dict, help_text='Report styling configuration'),
        ),
        migrations.AddField(
            model_name='reporttemplate',
            name='template_content',
            field=models.TextField(default=django.utils.timezone.now, help_text='Template content with placeholders'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='reporttemplate',
            name='template_type',
            field=models.CharField(choices=[('REGULATORY', 'Regulatory Report'), ('ANALYTICAL', 'Analytical Report'), ('OPERATIONAL', 'Operational Report'), ('EXECUTIVE', 'Executive Summary')], default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='analyticsmetric',
            name='metadata',
            field=models.JSONField(default=dict, help_text='Additional metric metadata'),
        ),
        migrations.AlterField(
            model_name='analyticsmetric',
            name='metric_type',
            field=models.CharField(choices=[('COUNT', 'Count'), ('SUM', 'Sum'), ('AVERAGE', 'Average'), ('PERCENTAGE', 'Percentage'), ('RATIO', 'Ratio'), ('TREND', 'Trend')], max_length=50),
        ),
        migrations.AlterField(
            model_name='dashboard',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_dashboards', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='dashboard',
            name='filters',
            field=models.JSONField(default=dict, help_text='Default filters for the dashboard'),
        ),
        migrations.AlterField(
            model_name='dashboard',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='dashboard',
            name='layout',
            field=models.JSONField(default=dict, help_text='Dashboard layout configuration'),
        ),
        migrations.AlterField(
            model_name='dashboard',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='dashboard',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='report',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='report',
            name='name',
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name='report',
            name='parameters',
            field=models.JSONField(default=dict, help_text='Report generation parameters'),
        ),
        migrations.AlterField(
            model_name='report',
            name='report_type',
            field=models.CharField(choices=[('DASHBOARD', 'Dashboard Report'), ('REGULATORY', 'Regulatory Report'), ('ANALYTICS', 'Analytics Report'), ('COMPLIANCE', 'Compliance Report'), ('CUSTOM', 'Custom Report')], max_length=50),
        ),
        migrations.AlterField(
            model_name='reportexecution',
            name='executed_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='executed_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='reportexecution',
            name='parameters_used',
            field=models.JSONField(default=dict, help_text='Parameters used for this execution'),
        ),
        migrations.AlterField(
            model_name='reporttemplate',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='reporttemplate',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='reporttemplate',
            name='parameters',
            field=models.JSONField(default=dict, help_text='Template parameters definition'),
        ),
        migrations.AddIndex(
            model_name='analyticsmetric',
            index=models.Index(fields=['metric_name', 'period_end'], name='reporting_a_metric__d69d02_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticsmetric',
            index=models.Index(fields=['category', 'metric_type'], name='reporting_a_categor_bccfbc_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticsmetric',
            index=models.Index(fields=['period_start', 'period_end'], name='reporting_a_period__3f38b4_idx'),
        ),
        migrations.AddIndex(
            model_name='dashboard',
            index=models.Index(fields=['is_public', 'is_active'], name='reporting_a_is_publ_638393_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['report_type', 'is_active'], name='reporting_a_report__fbeac4_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['report', 'status'], name='reporting_a_report__011efd_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['start_time'], name='reporting_a_start_t_d48185_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['executed_by'], name='reporting_a_execute_db0048_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['template_type', 'is_active'], name='reporting_a_templat_e221b1_idx'),
        ),
        migrations.AddField(
            model_name='datasource',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datasource',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='performancemetric',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatoryreport',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_regulatory_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatoryreport',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatoryreport',
            name='prepared_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prepared_regulatory_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatoryreport',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_regulatory_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatoryreport',
            name='submitted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_regulatory_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatoryreport',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='widget',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_widget_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='widget',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_widget_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='AnalyticsDashboard',
        ),
        migrations.DeleteModel(
            name='ComplianceReport',
        ),
        migrations.DeleteModel(
            name='DashboardWidget',
        ),
        migrations.DeleteModel(
            name='GeneratedReport',
        ),
        migrations.DeleteModel(
            name='MetricValue',
        ),
        migrations.AddIndex(
            model_name='datasource',
            index=models.Index(fields=['source_type', 'is_active'], name='reporting_a_source__33b607_idx'),
        ),
        migrations.AddIndex(
            model_name='datasource',
            index=models.Index(fields=['last_refresh'], name='reporting_a_last_re_59c363_idx'),
        ),
        migrations.AddIndex(
            model_name='performancemetric',
            index=models.Index(fields=['metric_name', 'measurement_time'], name='reporting_a_metric__7ab888_idx'),
        ),
        migrations.AddIndex(
            model_name='performancemetric',
            index=models.Index(fields=['metric_category'], name='reporting_a_metric__698706_idx'),
        ),
        migrations.AddIndex(
            model_name='regulatoryreport',
            index=models.Index(fields=['report_type', 'status'], name='reporting_a_report__0d32a6_idx'),
        ),
        migrations.AddIndex(
            model_name='regulatoryreport',
            index=models.Index(fields=['due_date'], name='reporting_a_due_dat_583566_idx'),
        ),
        migrations.AddIndex(
            model_name='regulatoryreport',
            index=models.Index(fields=['submission_date'], name='reporting_a_submiss_fd544e_idx'),
        ),
        migrations.AddIndex(
            model_name='widget',
            index=models.Index(fields=['widget_type', 'is_active'], name='reporting_a_widget__c75def_idx'),
        ),
    ]
