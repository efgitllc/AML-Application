# Generated by Django 5.2.4 on 2025-07-07 10:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('transaction_monitoring', '0003_monitoringrule_transactionalert'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RuleSimulation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('test_data', models.JSONField(help_text='Test transaction/customer data')),
                ('parameters', models.JSONField(help_text='Simulation parameters')),
                ('expected_alerts', models.JSONField(help_text='Expected alert outcomes')),
                ('actual_results', models.JSONField(blank=True, help_text='Actual simulation results', null=True)),
                ('is_successful', models.BooleanField(null=True)),
                ('execution_time', models.DurationField(null=True)),
                ('environment_config', models.JSONField(help_text='Test environment configuration')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to='transaction_monitoring.monitoringrule')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'rule simulation',
                'verbose_name_plural': 'rule simulations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SimulatedTransaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('transaction_data', models.JSONField(help_text='Simulated transaction details')),
                ('customer_data', models.JSONField(help_text='Associated customer data')),
                ('risk_factors', models.JSONField(help_text='Risk factors and scores')),
                ('expected_flags', models.JSONField(help_text='Expected rule flags')),
                ('actual_flags', models.JSONField(blank=True, help_text='Actual flags raised', null=True)),
                ('processing_time', models.DurationField(null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='training_simulation.rulesimulation')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'simulated transaction',
                'verbose_name_plural': 'simulated transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingMetrics',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('metric_type', models.CharField(choices=[('ACCURACY', 'Decision Accuracy'), ('SPEED', 'Processing Speed'), ('COMPLIANCE', 'Compliance Score'), ('EFFICIENCY', 'Task Efficiency'), ('LEARNING', 'Learning Progress')], max_length=50)),
                ('time_period', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly')], max_length=20)),
                ('metric_value', models.FloatField()),
                ('metric_details', models.JSONField(help_text='Detailed metric data')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'training metric',
                'verbose_name_plural': 'training metrics',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingScenario',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('scenario_type', models.CharField(choices=[('TRANSACTION', 'Transaction Scenario'), ('CUSTOMER', 'Customer Scenario'), ('RISK', 'Risk Assessment'), ('CASE', 'Case Management'), ('WORKFLOW', 'Workflow Process'), ('COMBINED', 'Combined Scenario')], max_length=50)),
                ('difficulty_level', models.CharField(choices=[('BASIC', 'Basic'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced'), ('EXPERT', 'Expert')], default='INTERMEDIATE', max_length=20)),
                ('scenario_data', models.JSONField(help_text='Scenario configuration and data')),
                ('expected_outcomes', models.JSONField(help_text='Expected scenario outcomes')),
                ('training_materials', models.JSONField(blank=True, help_text='Associated training materials', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_scenarios', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'training scenario',
                'verbose_name_plural': 'training scenarios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('ABANDONED', 'Abandoned')], default='IN_PROGRESS', max_length=50)),
                ('user_actions', models.JSONField(help_text='Record of user actions and decisions')),
                ('performance_metrics', models.JSONField(blank=True, help_text='User performance metrics', null=True)),
                ('feedback', models.TextField(blank=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='training_simulation.trainingscenario')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'training session',
                'verbose_name_plural': 'training sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='rulesimulation',
            index=models.Index(fields=['rule', '-created_at'], name='training_si_rule_id_6f7d99_idx'),
        ),
        migrations.AddIndex(
            model_name='rulesimulation',
            index=models.Index(fields=['is_successful'], name='training_si_is_succ_b5cc7c_idx'),
        ),
        migrations.AddIndex(
            model_name='simulatedtransaction',
            index=models.Index(fields=['simulation', '-created_at'], name='training_si_simulat_1d5493_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingmetrics',
            index=models.Index(fields=['user', 'metric_type', '-created_at'], name='training_si_user_id_e25600_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingmetrics',
            index=models.Index(fields=['time_period'], name='training_si_time_pe_c2ed0a_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingscenario',
            index=models.Index(fields=['scenario_type', 'difficulty_level'], name='training_si_scenari_a0e4c6_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingscenario',
            index=models.Index(fields=['is_active'], name='training_si_is_acti_e98869_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingsession',
            index=models.Index(fields=['user', '-start_time'], name='training_si_user_id_2e2eef_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingsession',
            index=models.Index(fields=['scenario', 'status'], name='training_si_scenari_1f4a19_idx'),
        ),
    ]
