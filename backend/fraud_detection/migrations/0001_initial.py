# Generated by Django 5.2.4 on 2025-07-07 10:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer_management', '0003_customer_last_segment_review_and_more'),
        ('transaction_monitoring', '0003_monitoringrule_transactionalert'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FraudDetectionRule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('rule_type', models.CharField(choices=[('TRANSACTION', 'Transaction Pattern'), ('BEHAVIOR', 'Behavioral Pattern'), ('VOICE', 'Voice Pattern'), ('DEVICE', 'Device Pattern'), ('LOCATION', 'Location Pattern'), ('COMBINED', 'Combined Pattern')], max_length=50)),
                ('conditions', models.JSONField(help_text='Rule conditions and thresholds')),
                ('risk_score', models.IntegerField(help_text='Risk score when rule matches (0-100)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'fraud detection rule',
                'verbose_name_plural': 'fraud detection rules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FraudAlert',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('action_at', models.DateTimeField(auto_now=True)),
                ('action_type', models.CharField(choices=[('CREATE', 'Created'), ('UPDATE', 'Updated'), ('DELETE', 'Deleted'), ('APPROVE', 'Approved'), ('REJECT', 'Rejected')], max_length=50)),
                ('alert_id', models.CharField(max_length=100, unique=True)),
                ('alert_type', models.CharField(choices=[('TRANSACTION', 'Suspicious Transaction'), ('VOICE', 'Voice Verification Failed'), ('BEHAVIOR', 'Unusual Behavior'), ('DEVICE', 'Suspicious Device'), ('LOCATION', 'Suspicious Location'), ('COMBINED', 'Multiple Indicators')], max_length=50)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=20)),
                ('alert_details', models.JSONField(help_text='Detailed alert information')),
                ('detection_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('INVESTIGATING', 'Under Investigation'), ('CONFIRMED', 'Confirmed Fraud'), ('FALSE_POSITIVE', 'False Positive'), ('RESOLVED', 'Resolved')], default='NEW', max_length=20)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_date', models.DateTimeField(blank=True, null=True)),
                ('action_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_actions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fraud_alerts', to='customer_management.customer')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fraud_alerts', to='transaction_monitoring.transaction')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('detection_rule', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='alerts', to='fraud_detection.frauddetectionrule')),
            ],
            options={
                'verbose_name': 'fraud alert',
                'verbose_name_plural': 'fraud alerts',
                'ordering': ['-detection_date'],
            },
        ),
        migrations.CreateModel(
            name='FraudPattern',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('pattern_type', models.CharField(choices=[('TRANSACTION', 'Transaction Pattern'), ('BEHAVIOR', 'Behavioral Pattern'), ('BIOMETRIC', 'Biometric Pattern'), ('DEVICE', 'Device Pattern'), ('NETWORK', 'Network Pattern'), ('LOCATION', 'Location Pattern'), ('CUSTOM', 'Custom Pattern')], max_length=50)),
                ('description', models.TextField()),
                ('detection_rules', models.JSONField(help_text='Rules for pattern detection')),
                ('risk_score', models.IntegerField(help_text='Risk score for this pattern (0-100)')),
                ('threshold', models.JSONField(help_text='Threshold configuration for alerts')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'fraud pattern',
                'verbose_name_plural': 'fraud patterns',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VoicePrint',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('voice_id', models.CharField(max_length=100, unique=True)),
                ('voice_features', models.JSONField(help_text='Extracted voice biometric features')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quality_score', models.FloatField(help_text='Voice print quality score (0-1)')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voice_prints', to='customer_management.customer')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'voice print',
                'verbose_name_plural': 'voice prints',
            },
        ),
        migrations.CreateModel(
            name='VoiceVerification',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('verification_id', models.CharField(max_length=100, unique=True)),
                ('verification_type', models.CharField(choices=[('AUTHENTICATION', 'Authentication'), ('TRANSACTION', 'Transaction Verification'), ('ENROLLMENT', 'Voice Print Enrollment'), ('UPDATE', 'Voice Print Update')], max_length=50)),
                ('audio_features', models.JSONField(help_text='Features extracted from verification audio')),
                ('match_score', models.FloatField(help_text='Voice match confidence score (0-1)')),
                ('liveness_score', models.FloatField(help_text='Voice liveness detection score (0-1)')),
                ('verification_result', models.CharField(choices=[('MATCH', 'Match'), ('NO_MATCH', 'No Match'), ('INCONCLUSIVE', 'Inconclusive'), ('ERROR', 'Error')], max_length=20)),
                ('verification_date', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voice_verifications', to='customer_management.customer')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('voice_print', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='verifications', to='fraud_detection.voiceprint')),
            ],
            options={
                'verbose_name': 'voice verification',
                'verbose_name_plural': 'voice verifications',
            },
        ),
        migrations.CreateModel(
            name='DeviceFingerprint',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('device_id', models.CharField(max_length=100, unique=True)),
                ('device_type', models.CharField(choices=[('MOBILE', 'Mobile Device'), ('DESKTOP', 'Desktop/Laptop'), ('TABLET', 'Tablet'), ('OTHER', 'Other')], max_length=50)),
                ('device_details', models.JSONField(help_text='Device fingerprint details')),
                ('risk_score', models.FloatField(help_text='Device risk score (0-1)')),
                ('is_trusted', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('location_history', models.JSONField(blank=True, help_text='Device location history', null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='customer_management.customer')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'device fingerprint',
                'verbose_name_plural': 'device fingerprints',
                'indexes': [models.Index(fields=['device_id'], name='fraud_detec_device__d081e5_idx'), models.Index(fields=['customer', 'is_trusted'], name='fraud_detec_custome_258337_idx')],
            },
        ),
        migrations.CreateModel(
            name='FraudCase',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('case_id', models.CharField(max_length=100, unique=True)),
                ('case_type', models.CharField(choices=[('IDENTITY_THEFT', 'Identity Theft'), ('ACCOUNT_TAKEOVER', 'Account Takeover'), ('TRANSACTION_FRAUD', 'Transaction Fraud'), ('SYNTHETIC_IDENTITY', 'Synthetic Identity'), ('OTHER', 'Other')], max_length=50)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('INVESTIGATING', 'Under Investigation'), ('PENDING_ACTION', 'Pending Action'), ('CLOSED', 'Closed'), ('REOPENED', 'Reopened')], default='OPEN', max_length=20)),
                ('assigned_to', models.UUIDField(blank=True, null=True)),
                ('investigation_notes', models.TextField(blank=True)),
                ('evidence', models.JSONField(blank=True, help_text='Evidence collected during investigation', null=True)),
                ('resolution', models.JSONField(blank=True, help_text='Case resolution details', null=True)),
                ('alerts', models.ManyToManyField(related_name='fraud_cases', to='fraud_detection.fraudalert')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fraud_cases', to='customer_management.customer')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'fraud case',
                'verbose_name_plural': 'fraud cases',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['case_type', 'status'], name='fraud_detec_case_ty_ae305a_idx'), models.Index(fields=['customer', 'priority'], name='fraud_detec_custome_7abf62_idx'), models.Index(fields=['case_id'], name='fraud_detec_case_id_e772eb_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='frauddetectionrule',
            index=models.Index(fields=['rule_type', 'is_active'], name='fraud_detec_rule_ty_40b7f9_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudalert',
            index=models.Index(fields=['alert_id'], name='fraud_detec_alert_i_a5ceba_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudalert',
            index=models.Index(fields=['alert_type', 'severity'], name='fraud_detec_alert_t_27add5_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudalert',
            index=models.Index(fields=['status', 'detection_date'], name='fraud_detec_status_740c2b_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudpattern',
            index=models.Index(fields=['pattern_type', 'is_active'], name='fraud_detec_pattern_c5f17c_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudpattern',
            index=models.Index(fields=['risk_score'], name='fraud_detec_risk_sc_917649_idx'),
        ),
        migrations.AddIndex(
            model_name='voiceprint',
            index=models.Index(fields=['voice_id'], name='fraud_detec_voice_i_8b2928_idx'),
        ),
        migrations.AddIndex(
            model_name='voiceprint',
            index=models.Index(fields=['customer', 'is_active'], name='fraud_detec_custome_45494b_idx'),
        ),
        migrations.AddIndex(
            model_name='voiceverification',
            index=models.Index(fields=['verification_id'], name='fraud_detec_verific_a1721f_idx'),
        ),
        migrations.AddIndex(
            model_name='voiceverification',
            index=models.Index(fields=['verification_type', 'verification_result'], name='fraud_detec_verific_12732a_idx'),
        ),
    ]
