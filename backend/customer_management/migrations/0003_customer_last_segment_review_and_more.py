# Generated by Django 5.2.4 on 2025-07-07 09:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('customer_management', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='customer',
            name='last_segment_review',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='segment_history',
            field=models.JSONField(default=list, help_text='History of segment changes'),
        ),
        migrations.AddField(
            model_name='customer',
            name='segment_score',
            field=models.IntegerField(default=0, help_text='Customer segment score (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.CreateModel(
            name='CustomerSegment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('criteria', models.JSONField(help_text='Segmentation criteria and rules')),
                ('priority', models.IntegerField(default=0)),
                ('benefits', models.JSONField(help_text='Segment-specific benefits or features')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer segment',
                'verbose_name_plural': 'customer segments',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='segment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to='customer_management.customersegment'),
        ),
        migrations.CreateModel(
            name='CustomerJourney',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('event_type', models.CharField(choices=[('ONBOARDING_STARTED', 'Onboarding Started'), ('KYC_SUBMITTED', 'KYC Documents Submitted'), ('KYC_VERIFIED', 'KYC Verified'), ('ACCOUNT_ACTIVATED', 'Account Activated'), ('RISK_ASSESSMENT', 'Risk Assessment'), ('SEGMENT_CHANGE', 'Segment Change'), ('PRODUCT_ADDED', 'Product Added'), ('SERVICE_ISSUE', 'Service Issue'), ('COMPLAINT_FILED', 'Complaint Filed'), ('REVIEW_COMPLETED', 'Review Completed'), ('STATUS_CHANGE', 'Status Change'), ('ACCOUNT_SUSPENDED', 'Account Suspended'), ('ACCOUNT_REACTIVATED', 'Account Reactivated'), ('RELATIONSHIP_ADDED', 'Relationship Added'), ('DOCUMENT_EXPIRED', 'Document Expired'), ('OTHER', 'Other')], max_length=50)),
                ('event_date', models.DateTimeField()),
                ('event_details', models.JSONField(help_text='Detailed event information')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='COMPLETED', max_length=20)),
                ('source', models.CharField(choices=[('SYSTEM', 'System Generated'), ('USER', 'User Action'), ('SCHEDULED', 'Scheduled Event'), ('EXTERNAL', 'External Trigger')], max_length=50)),
                ('triggered_by', models.UUIDField(blank=True, null=True)),
                ('next_actions', models.JSONField(blank=True, help_text='Required follow-up actions', null=True)),
                ('metrics', models.JSONField(blank=True, help_text='Event-specific metrics', null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journey_events', to='customer_management.customer')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer journey',
                'verbose_name_plural': 'customer journeys',
                'ordering': ['-event_date'],
                'indexes': [models.Index(fields=['customer', 'event_type'], name='customer_ma_custome_594ba9_idx'), models.Index(fields=['event_date', 'status'], name='customer_ma_event_d_f2a839_idx')],
            },
        ),
        migrations.CreateModel(
            name='CustomerRelationship',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('relationship_type', models.CharField(choices=[('DIRECTOR', 'Director'), ('SHAREHOLDER', 'Shareholder'), ('BENEFICIAL_OWNER', 'Beneficial Owner'), ('FAMILY_MEMBER', 'Family Member'), ('BUSINESS_ASSOCIATE', 'Business Associate'), ('AUTHORIZED_PERSON', 'Authorized Person'), ('OTHER', 'Other')], max_length=50)),
                ('details', models.JSONField(help_text='Additional relationship details')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('ownership_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Ownership percentage if applicable', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('verification_status', models.CharField(choices=[('PENDING', 'Pending'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_documents', models.JSONField(default=list)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('from_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_relationships', to='customer_management.customer')),
                ('to_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_relationships', to='customer_management.customer')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer relationship',
                'verbose_name_plural': 'customer relationships',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['relationship_type', 'is_active'], name='customer_ma_relatio_ca944b_idx'), models.Index(fields=['verification_status'], name='customer_ma_verific_65e419_idx')],
                'unique_together': {('from_customer', 'to_customer', 'relationship_type')},
            },
        ),
        migrations.AddIndex(
            model_name='customersegment',
            index=models.Index(fields=['priority', 'is_active'], name='customer_ma_priorit_fa8d13_idx'),
        ),
    ]
