# Generated by Django 5.2.4 on 2025-07-07 06:22

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], db_index=True, default='LOW', max_length=20)),
                ('risk_score', models.IntegerField(default=0, help_text='Risk score between 0-100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_assessment_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('risk_assessment_notes', models.TextField(blank=True)),
                ('risk_factors', models.JSONField(default=dict, help_text='Factors contributing to risk score')),
                ('previous_risk_levels', models.JSONField(default=list, help_text='History of risk level changes')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled'), ('ON_HOLD', 'On Hold'), ('EXPIRED', 'Expired'), ('BLOCKED', 'Blocked')], db_index=True, default='PENDING', max_length=50)),
                ('status_changed_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('status_reason', models.TextField(blank=True)),
                ('status_history', models.JSONField(default=list, help_text='History of status changes')),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('transaction_type', models.CharField(choices=[('CASH_DEPOSIT', 'Cash Deposit'), ('CASH_WITHDRAWAL', 'Cash Withdrawal'), ('WIRE_TRANSFER', 'Wire Transfer'), ('INTERNAL_TRANSFER', 'Internal Transfer'), ('CHEQUE_DEPOSIT', 'Cheque Deposit'), ('CARD_PAYMENT', 'Card Payment'), ('LOAN_DISBURSEMENT', 'Loan Disbursement'), ('LOAN_REPAYMENT', 'Loan Repayment'), ('FX_EXCHANGE', 'Foreign Exchange'), ('OTHER', 'Other Transaction')], db_index=True, max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='AED', max_length=3)),
                ('source_account', models.CharField(max_length=50)),
                ('destination_account', models.CharField(max_length=50)),
                ('transaction_date', models.DateTimeField(db_index=True)),
                ('description', models.TextField(blank=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('is_suspicious', models.BooleanField(db_index=True, default=False)),
                ('alert_generated', models.BooleanField(default=False)),
                ('monitoring_status', models.CharField(default='PENDING', max_length=50)),
                ('monitoring_notes', models.TextField(blank=True)),
                ('monitoring_history', models.JSONField(default=list)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='TransactionPattern',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('pattern_type', models.CharField(max_length=50)),
                ('rules', models.JSONField(help_text='Pattern matching rules')),
                ('threshold', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('time_window', models.DurationField(help_text='Time window for pattern detection')),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('priority', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('alert_template', models.JSONField(help_text='Template for alert generation')),
            ],
            options={
                'verbose_name': 'Transaction Pattern',
                'verbose_name_plural': 'Transaction Patterns',
                'ordering': ['-priority', 'name'],
            },
        ),
    ]
