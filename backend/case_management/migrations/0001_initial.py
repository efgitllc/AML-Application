# Generated by Django 5.2.4 on 2025-07-07 10:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer_management', '0003_customer_last_segment_review_and_more'),
        ('transaction_monitoring', '0003_monitoringrule_transactionalert'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('case_number', models.CharField(help_text='Unique case reference number', max_length=50, unique=True)),
                ('case_type', models.CharField(choices=[('STR', 'Suspicious Transaction Report'), ('KYC', 'KYC Investigation'), ('SANCTIONS', 'Sanctions Investigation'), ('FRAUD', 'Fraud Investigation'), ('PEP', 'PEP Review'), ('PERIODIC_REVIEW', 'Periodic Review'), ('OTHER', 'Other')], max_length=50)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('ASSIGNED', 'Assigned'), ('IN_PROGRESS', 'In Progress'), ('PENDING_INFO', 'Pending Information'), ('UNDER_REVIEW', 'Under Review'), ('ESCALATED', 'Escalated'), ('CLOSED', 'Closed'), ('REOPENED', 'Reopened')], default='NEW', max_length=20)),
                ('assigned_to', models.UUIDField(blank=True, null=True)),
                ('escalated_to', models.UUIDField(blank=True, null=True)),
                ('summary', models.TextField()),
                ('risk_rating', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='MEDIUM', max_length=20)),
                ('source', models.CharField(choices=[('ALERT', 'System Alert'), ('MANUAL', 'Manual Entry'), ('EXTERNAL', 'External Source'), ('REGULATORY', 'Regulatory Request')], max_length=50)),
                ('detection_date', models.DateTimeField()),
                ('due_date', models.DateTimeField()),
                ('closed_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('primary_customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primary_cases', to='customer_management.customer')),
                ('related_alerts', models.ManyToManyField(blank=True, related_name='related_cases', to='transaction_monitoring.transactionalert')),
                ('related_customers', models.ManyToManyField(blank=True, related_name='related_cases', to='customer_management.customer')),
                ('related_transactions', models.ManyToManyField(blank=True, related_name='related_cases', to='transaction_monitoring.transaction')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'case',
                'verbose_name_plural': 'cases',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseActivity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('activity_type', models.CharField(choices=[('STATUS_CHANGE', 'Status Change'), ('ASSIGNMENT', 'Assignment'), ('COMMENT', 'Comment'), ('DOCUMENT_ADDED', 'Document Added'), ('EVIDENCE_ADDED', 'Evidence Added'), ('CUSTOMER_CONTACTED', 'Customer Contacted'), ('REVIEW', 'Review'), ('DECISION', 'Decision Made')], max_length=50)),
                ('performed_by', models.UUIDField()),
                ('description', models.TextField()),
                ('old_value', models.JSONField(blank=True, null=True)),
                ('new_value', models.JSONField(blank=True, null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='case_management.case')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'case activity',
                'verbose_name_plural': 'case activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseDecision',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('decision_type', models.CharField(choices=[('STR_FILING', 'File STR'), ('ACCOUNT_CLOSURE', 'Close Account'), ('RELATIONSHIP_TERMINATION', 'Terminate Relationship'), ('ENHANCED_MONITORING', 'Enhanced Monitoring'), ('NO_ACTION', 'No Action Required'), ('OTHER', 'Other')], max_length=50)),
                ('decision_maker', models.UUIDField()),
                ('decision_date', models.DateTimeField()),
                ('rationale', models.TextField()),
                ('evidence_references', models.JSONField(blank=True, help_text='References to supporting evidence', null=True)),
                ('regulatory_references', models.JSONField(blank=True, help_text='Relevant regulatory requirements or guidelines', null=True)),
                ('action_items', models.JSONField(blank=True, help_text='Required actions following the decision', null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('approved_by', models.UUIDField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decisions', to='case_management.case')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'case decision',
                'verbose_name_plural': 'case decisions',
                'ordering': ['-decision_date'],
            },
        ),
        migrations.CreateModel(
            name='CaseDocument',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('document_type', models.CharField(choices=[('EVIDENCE', 'Evidence'), ('REPORT', 'Report'), ('CORRESPONDENCE', 'Correspondence'), ('CUSTOMER_STATEMENT', 'Customer Statement'), ('REGULATORY_FILING', 'Regulatory Filing'), ('SUPPORTING_DOC', 'Supporting Document'), ('OTHER', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(max_length=255, upload_to='case_documents/%Y/%m/')),
                ('uploaded_by', models.UUIDField()),
                ('is_confidential', models.BooleanField(default=False)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='case_management.case')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'case document',
                'verbose_name_plural': 'case documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RegulatoryFiling',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('filing_type', models.CharField(choices=[('STR', 'Suspicious Transaction Report'), ('CTR', 'Cash Transaction Report'), ('SAR', 'Suspicious Activity Report'), ('OTHER', 'Other Regulatory Filing')], max_length=50)),
                ('filing_reference', models.CharField(help_text='Reference number assigned by regulatory authority', max_length=100, unique=True)),
                ('regulatory_body', models.CharField(help_text='Name of the regulatory authority', max_length=100)),
                ('filing_date', models.DateTimeField()),
                ('due_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING_REVIEW', 'Pending Review'), ('SUBMITTED', 'Submitted'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('AMENDED', 'Amended')], default='DRAFT', max_length=20)),
                ('prepared_by', models.UUIDField()),
                ('reviewed_by', models.UUIDField(blank=True, null=True)),
                ('submitted_by', models.UUIDField(blank=True, null=True)),
                ('filing_data', models.JSONField(help_text='Complete filing data in required format')),
                ('attachments', models.JSONField(blank=True, help_text='References to attached documents', null=True)),
                ('submission_response', models.JSONField(blank=True, help_text='Response received from regulatory authority', null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='regulatory_filings', to='case_management.case')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'regulatory filing',
                'verbose_name_plural': 'regulatory filings',
                'ordering': ['-filing_date'],
            },
        ),
        migrations.CreateModel(
            name='SARCase',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('case_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('UNDER_REVIEW', 'Under Review'), ('APPROVED', 'Approved for Filing'), ('FILED', 'Filed with Regulator'), ('REJECTED', 'Rejected'), ('CLOSED', 'Closed')], default='DRAFT', max_length=50)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=20)),
                ('suspicious_activity', models.JSONField(help_text='Details of suspicious activities')),
                ('risk_assessment', models.JSONField(help_text='Risk assessment details')),
                ('investigation_notes', models.TextField()),
                ('evidence_documents', models.JSONField(help_text='List of supporting documents')),
                ('filing_deadline', models.DateTimeField()),
                ('filed_date', models.DateTimeField(blank=True, null=True)),
                ('regulatory_reference', models.CharField(blank=True, help_text='Reference number from regulator', max_length=100)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_sar_cases', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_sar_cases', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sar_cases', to='customer_management.customer')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_sar_cases', to=settings.AUTH_USER_MODEL)),
                ('transactions', models.ManyToManyField(related_name='sar_cases', to='transaction_monitoring.transaction')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SAR case',
                'verbose_name_plural': 'SAR cases',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RegulatoryReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('report_type', models.CharField(choices=[('FINTRAC', 'FINTRAC Report'), ('AUSTRAC', 'AUSTRAC Report'), ('FINCEN', 'FinCEN Report'), ('OTHER', 'Other Report')], max_length=50)),
                ('report_data', models.JSONField(help_text='Report data in required format')),
                ('submission_status', models.CharField(choices=[('DRAFT', 'Draft'), ('READY', 'Ready for Submission'), ('SUBMITTED', 'Submitted'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=50)),
                ('reference_number', models.CharField(blank=True, help_text='Reference number from regulatory system', max_length=100)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledgment', models.JSONField(blank=True, help_text='Acknowledgment from regulatory system', null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('prepared_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prepared_reports', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_reports', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('sar_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regulatory_reports', to='case_management.sarcase')),
            ],
            options={
                'verbose_name': 'regulatory report',
                'verbose_name_plural': 'regulatory reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='goAMLSubmission',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('submission_id', models.CharField(max_length=100, unique=True)),
                ('report_type', models.CharField(choices=[('STR', 'Suspicious Transaction Report'), ('SAR', 'Suspicious Activity Report'), ('CTR', 'Cash Transaction Report'), ('CBWTR', 'Cross-Border Wire Transfer Report')], max_length=50)),
                ('xml_content', models.TextField(help_text='Generated XML content for submission')),
                ('submission_status', models.CharField(choices=[('PENDING', 'Pending'), ('VALIDATING', 'XML Validation'), ('SUBMITTED', 'Submitted'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('ERROR', 'Error')], default='PENDING', max_length=50)),
                ('validation_errors', models.JSONField(blank=True, help_text='XML validation errors if any', null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('response_data', models.JSONField(blank=True, help_text='Response from goAML system', null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goaml_submissions', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('sar_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goaml_submissions', to='case_management.sarcase')),
            ],
            options={
                'verbose_name': 'goAML submission',
                'verbose_name_plural': 'goAML submissions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['case_number'], name='case_manage_case_nu_e1437f_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['case_type', 'status'], name='case_manage_case_ty_1e9d16_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['priority', 'due_date'], name='case_manage_priorit_53f3a5_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['assigned_to'], name='case_manage_assigne_179ba6_idx'),
        ),
        migrations.AddIndex(
            model_name='caseactivity',
            index=models.Index(fields=['case', '-created_at'], name='case_manage_case_id_964508_idx'),
        ),
        migrations.AddIndex(
            model_name='caseactivity',
            index=models.Index(fields=['activity_type'], name='case_manage_activit_e71593_idx'),
        ),
        migrations.AddIndex(
            model_name='casedecision',
            index=models.Index(fields=['case', 'decision_type'], name='case_manage_case_id_cc60cd_idx'),
        ),
        migrations.AddIndex(
            model_name='casedecision',
            index=models.Index(fields=['decision_date'], name='case_manage_decisio_1b3d98_idx'),
        ),
        migrations.AddIndex(
            model_name='casedocument',
            index=models.Index(fields=['case', 'document_type'], name='case_manage_case_id_7564a9_idx'),
        ),
        migrations.AddIndex(
            model_name='casedocument',
            index=models.Index(fields=['is_confidential'], name='case_manage_is_conf_33920d_idx'),
        ),
        migrations.AddIndex(
            model_name='regulatoryfiling',
            index=models.Index(fields=['case', 'filing_type'], name='case_manage_case_id_cbf9e1_idx'),
        ),
        migrations.AddIndex(
            model_name='regulatoryfiling',
            index=models.Index(fields=['filing_reference'], name='case_manage_filing__ca87b3_idx'),
        ),
        migrations.AddIndex(
            model_name='regulatoryfiling',
            index=models.Index(fields=['status', 'due_date'], name='case_manage_status_8f162e_idx'),
        ),
        migrations.AddIndex(
            model_name='sarcase',
            index=models.Index(fields=['case_number'], name='case_manage_case_nu_8fe132_idx'),
        ),
        migrations.AddIndex(
            model_name='sarcase',
            index=models.Index(fields=['status', 'priority'], name='case_manage_status_f35440_idx'),
        ),
        migrations.AddIndex(
            model_name='sarcase',
            index=models.Index(fields=['filing_deadline'], name='case_manage_filing__976561_idx'),
        ),
        migrations.AddIndex(
            model_name='regulatoryreport',
            index=models.Index(fields=['report_type', 'submission_status'], name='case_manage_report__07216f_idx'),
        ),
        migrations.AddIndex(
            model_name='regulatoryreport',
            index=models.Index(fields=['reference_number'], name='case_manage_referen_6f497e_idx'),
        ),
        migrations.AddIndex(
            model_name='goamlsubmission',
            index=models.Index(fields=['submission_id'], name='case_manage_submiss_a49ba0_idx'),
        ),
        migrations.AddIndex(
            model_name='goamlsubmission',
            index=models.Index(fields=['report_type', 'submission_status'], name='case_manage_report__356bdf_idx'),
        ),
    ]
