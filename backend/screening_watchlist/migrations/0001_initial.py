# Generated by Django 5.2.4 on 2025-07-07 10:40

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer_management', '0003_customer_last_segment_review_and_more'),
        ('transaction_monitoring', '0003_monitoringrule_transactionalert'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScreeningConfiguration',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('screening_type', models.CharField(choices=[('NAME', 'Name Screening'), ('TRANSACTION', 'Transaction Screening'), ('DOCUMENT', 'Document Screening'), ('ADDRESS', 'Address Screening')], max_length=50)),
                ('sources', models.JSONField(help_text='Watchlist sources to check')),
                ('matching_rules', models.JSONField(help_text='Name matching and scoring rules')),
                ('threshold_settings', models.JSONField(help_text='Match threshold settings')),
                ('language_settings', models.JSONField(help_text='Language-specific configurations')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'screening configuration',
                'verbose_name_plural': 'screening configurations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScreeningHistory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('entity_id', models.UUIDField(help_text='ID of the screened entity (customer, transaction, etc.)')),
                ('entity_type', models.CharField(help_text='Type of entity screened', max_length=50)),
                ('screening_date', models.DateTimeField()),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('matches_found', models.JSONField(blank=True, help_text='Details of matches found', null=True)),
                ('error_details', models.JSONField(blank=True, help_text='Details of any errors encountered', null=True)),
                ('processing_time', models.DurationField(blank=True, null=True)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='screening_history', to='screening_watchlist.screeningconfiguration')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'screening history',
                'verbose_name_plural': 'screening history',
                'ordering': ['-screening_date'],
            },
        ),
        migrations.CreateModel(
            name='WatchlistEntry',
            fields=[
                ('risk_score', models.IntegerField(default=0, help_text='Risk score between 0-100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_assessment_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('risk_assessment_notes', models.TextField(blank=True)),
                ('risk_factors', models.JSONField(default=dict, help_text='Factors contributing to risk score')),
                ('previous_risk_levels', models.JSONField(default=list, help_text='History of risk level changes')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=200)),
                ('alias', models.CharField(blank=True, max_length=200)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('source', models.CharField(max_length=100)),
                ('source_url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('details', models.JSONField(help_text='Detailed information in multiple languages')),
                ('identifiers', models.JSONField(help_text='Identification numbers, codes, etc.')),
                ('addresses', models.JSONField(blank=True, help_text='Associated addresses', null=True)),
                ('relationships', models.JSONField(blank=True, help_text='Related entities/individuals', null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'watchlist entry',
                'verbose_name_plural': 'watchlist entries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScreeningMatch',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('match_id', models.CharField(max_length=100, unique=True)),
                ('match_type', models.CharField(choices=[('NAME', 'Name Match'), ('ALIAS', 'Alias Match'), ('ADDRESS', 'Address Match'), ('ID', 'ID Match'), ('RELATIONSHIP', 'Relationship Match')], max_length=50)),
                ('match_strength', models.FloatField(help_text='Match confidence score (0-1)')),
                ('matched_fields', models.JSONField(help_text='Details of matched fields')),
                ('screening_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('REVIEWING', 'Under Review'), ('CONFIRMED', 'Confirmed Match'), ('FALSE_POSITIVE', 'False Positive'), ('RESOLVED', 'Resolved')], default='NEW', max_length=20)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screening_matches', to='customer_management.customer')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screening_matches', to='transaction_monitoring.transaction')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('watchlist_entry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='screening_matches', to='screening_watchlist.watchlistentry')),
            ],
            options={
                'verbose_name': 'screening match',
                'verbose_name_plural': 'screening matches',
                'ordering': ['-screening_date'],
            },
        ),
        migrations.CreateModel(
            name='WatchlistMatch',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('match_type', models.CharField(choices=[('EXACT', 'Exact Match'), ('PARTIAL', 'Partial Match'), ('PHONETIC', 'Phonetic Match'), ('FUZZY', 'Fuzzy Match'), ('MANUAL', 'Manual Match')], max_length=50)),
                ('match_score', models.FloatField(help_text='Match confidence score (0-100)')),
                ('match_details', models.JSONField(help_text='Detailed matching information')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('CONFIRMED', 'Confirmed Match'), ('FALSE_POSITIVE', 'False Positive'), ('UNDER_INVESTIGATION', 'Under Investigation'), ('CLOSED', 'Closed')], default='PENDING', max_length=20)),
                ('reviewed_by', models.UUIDField(blank=True, null=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screening_watchlist_match_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screening_watchlist_matches', to='customer_management.customer')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist_matches', to='screening_watchlist.watchlistentry')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screening_watchlist_matches', to='transaction_monitoring.transaction')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screening_watchlist_match_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'watchlist match',
                'verbose_name_plural': 'watchlist matches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WatchlistProvider',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('provider_type', models.CharField(choices=[('SANCTIONS', 'Sanctions Lists'), ('PEP', 'Politically Exposed Persons'), ('ADVERSE_MEDIA', 'Adverse Media'), ('LAW_ENFORCEMENT', 'Law Enforcement'), ('REGULATORY', 'Regulatory Lists'), ('CUSTOM', 'Custom Lists')], max_length=50)),
                ('description', models.TextField()),
                ('api_credentials', models.JSONField(help_text='API authentication credentials')),
                ('update_frequency', models.CharField(choices=[('REALTIME', 'Real-time'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], max_length=20)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('next_update', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'watchlist provider',
                'verbose_name_plural': 'watchlist providers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScreeningBatch',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('batch_type', models.CharField(choices=[('INITIAL', 'Initial Screening'), ('PERIODIC', 'Periodic Review'), ('TRIGGERED', 'Triggered Review'), ('BACKFILL', 'Historical Backfill')], max_length=50)),
                ('filters', models.JSONField(help_text='Screening criteria and filters')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_records', models.IntegerField(default=0)),
                ('processed_records', models.IntegerField(default=0)),
                ('matched_records', models.IntegerField(default=0)),
                ('error_details', models.JSONField(blank=True, help_text='Error information if failed', null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('providers', models.ManyToManyField(related_name='screening_batches', to='screening_watchlist.watchlistprovider')),
            ],
            options={
                'verbose_name': 'screening batch',
                'verbose_name_plural': 'screening batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WatchlistSource',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('source_type', models.CharField(choices=[('SANCTIONS', 'Sanctions List'), ('PEP', 'Politically Exposed Persons'), ('LAW_ENFORCEMENT', 'Law Enforcement'), ('ADVERSE_MEDIA', 'Adverse Media'), ('REGULATORY', 'Regulatory'), ('INTERNAL', 'Internal List')], max_length=50)),
                ('provider', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('update_frequency', models.CharField(choices=[('REAL_TIME', 'Real-time'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly')], max_length=20)),
                ('last_updated', models.DateTimeField(null=True)),
                ('next_update', models.DateTimeField(null=True)),
                ('api_endpoint', models.URLField(blank=True)),
                ('api_credentials', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'watchlist source',
                'verbose_name_plural': 'watchlist sources',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NameMatchingRule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic'), ('zh', 'Chinese'), ('ru', 'Russian'), ('fa', 'Farsi'), ('ur', 'Urdu')], max_length=10)),
                ('script', models.CharField(choices=[('LATIN', 'Latin'), ('ARABIC', 'Arabic'), ('CHINESE', 'Chinese'), ('CYRILLIC', 'Cyrillic'), ('DEVANAGARI', 'Devanagari')], max_length=20)),
                ('matching_algorithm', models.CharField(choices=[('EXACT', 'Exact Match'), ('FUZZY', 'Fuzzy Match'), ('PHONETIC', 'Phonetic Match'), ('TRANSLITERATION', 'Transliteration Match'), ('ML', 'Machine Learning')], max_length=50)),
                ('algorithm_config', models.JSONField(help_text='Algorithm-specific configuration')),
                ('threshold', models.FloatField(help_text='Minimum match threshold (0-1)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'name matching rule',
                'verbose_name_plural': 'name matching rules',
                'indexes': [models.Index(fields=['language', 'script'], name='screening_w_languag_a024ed_idx'), models.Index(fields=['matching_algorithm', 'is_active'], name='screening_w_matchin_cf3f4b_idx')],
                'unique_together': {('language', 'script', 'matching_algorithm')},
            },
        ),
        migrations.CreateModel(
            name='SanctionedCountry',
            fields=[
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], db_index=True, default='LOW', max_length=20)),
                ('risk_score', models.IntegerField(default=0, help_text='Risk score between 0-100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_assessment_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('risk_assessment_notes', models.TextField(blank=True)),
                ('risk_factors', models.JSONField(default=dict, help_text='Factors contributing to risk score')),
                ('previous_risk_levels', models.JSONField(default=list, help_text='History of risk level changes')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('country_name', models.CharField(max_length=100)),
                ('country_code', models.CharField(max_length=3)),
                ('sanctions_programs', models.JSONField(help_text='Active sanctions programs affecting this country')),
                ('restrictions', models.JSONField(help_text='Specific restrictions or prohibitions')),
                ('effective_date', models.DateField()),
                ('last_updated', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sanctioned country',
                'verbose_name_plural': 'sanctioned countries',
                'ordering': ['country_name'],
                'indexes': [models.Index(fields=['country_code'], name='screening_w_country_f3f2ff_idx'), models.Index(fields=['risk_level'], name='screening_w_risk_le_9347db_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='screeningconfiguration',
            index=models.Index(fields=['screening_type', 'is_active'], name='screening_w_screeni_271a9d_idx'),
        ),
        migrations.AddIndex(
            model_name='screeninghistory',
            index=models.Index(fields=['entity_id', 'entity_type'], name='screening_w_entity__46dc64_idx'),
        ),
        migrations.AddIndex(
            model_name='screeninghistory',
            index=models.Index(fields=['status', 'screening_date'], name='screening_w_status_0f12b2_idx'),
        ),
        migrations.AddIndex(
            model_name='watchlistentry',
            index=models.Index(fields=['risk_level', 'is_active'], name='screening_w_risk_le_de45dd_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningmatch',
            index=models.Index(fields=['match_type', 'status'], name='screening_w_match_t_fe9aaa_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningmatch',
            index=models.Index(fields=['match_strength'], name='screening_w_match_s_7b0b46_idx'),
        ),
        migrations.AddIndex(
            model_name='watchlistmatch',
            index=models.Index(fields=['match_type', 'status'], name='screening_w_match_t_293092_idx'),
        ),
        migrations.AddIndex(
            model_name='watchlistmatch',
            index=models.Index(fields=['match_score'], name='screening_w_match_s_b8f038_idx'),
        ),
        migrations.AddIndex(
            model_name='watchlistprovider',
            index=models.Index(fields=['provider_type', 'is_active'], name='screening_w_provide_0e0f01_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningbatch',
            index=models.Index(fields=['batch_type', 'status'], name='screening_w_batch_t_0c9e56_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningbatch',
            index=models.Index(fields=['-created_at'], name='screening_w_created_aa7929_idx'),
        ),
        migrations.AddIndex(
            model_name='watchlistsource',
            index=models.Index(fields=['source_type', 'is_active'], name='screening_w_source__9f395b_idx'),
        ),
        migrations.AddIndex(
            model_name='watchlistsource',
            index=models.Index(fields=['last_updated'], name='screening_w_last_up_dcb52f_idx'),
        ),
    ]
