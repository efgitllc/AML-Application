# Generated by Django 5.2.4 on 2025-07-07 10:40

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer_management', '0003_customer_last_segment_review_and_more'),
        ('transaction_monitoring', '0003_monitoringrule_transactionalert'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EDDRequest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField()),
                ('risk_level_at_request', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='HIGH', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('UNDER_REVIEW', 'Under Review'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('escalation_required', models.BooleanField(default=False, help_text='Flag if request must be escalated to compliance officer')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edd_requests', to='customer_management.customer')),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edd_requests_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'EDD request',
                'verbose_name_plural': 'EDD requests',
                'ordering': ['-request_date'],
            },
        ),
        migrations.CreateModel(
            name='EDDApproval',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('approval_date', models.DateTimeField(auto_now_add=True)),
                ('decision', models.CharField(choices=[('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], max_length=20)),
                ('comments', models.TextField(blank=True)),
                ('approver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edd_approvals_given', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='risk_scoring.eddrequest')),
            ],
            options={
                'verbose_name': 'EDD approval',
                'verbose_name_plural': 'EDD approvals',
                'ordering': ['-approval_date'],
            },
        ),
        migrations.CreateModel(
            name='EDDReview',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('review_date', models.DateTimeField(auto_now_add=True)),
                ('findings', models.JSONField(help_text='Structured findings captured during review')),
                ('recommendation', models.CharField(choices=[('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('ESCALATE', 'Escalate')], max_length=20)),
                ('risk_level_assessed', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='HIGH', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='risk_scoring.eddrequest')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edd_reviews_performed', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'EDD review',
                'verbose_name_plural': 'EDD reviews',
                'ordering': ['-review_date'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('category', models.CharField(choices=[('ACCOUNT', 'Account'), ('LOAN', 'Loan'), ('INVESTMENT', 'Investment'), ('INSURANCE', 'Insurance'), ('TRADE_FINANCE', 'Trade Finance'), ('PAYMENT_SERVICE', 'Payment Service'), ('OTHER', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='LOW', max_length=20)),
                ('risk_factors', models.JSONField(help_text='Specific risk factors for this product')),
                ('regulatory_requirements', models.JSONField(help_text='Regulatory requirements and restrictions')),
                ('kyc_requirements', models.JSONField(help_text='KYC requirements for this product')),
                ('transaction_limits', models.JSONField(help_text='Transaction limits and thresholds')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], default='LOW', max_length=20)),
                ('risk_factors', models.JSONField(help_text='Specific risk factors for this region')),
                ('sanctions_status', models.BooleanField(default=False)),
                ('fatf_status', models.CharField(choices=[('COMPLIANT', 'Compliant'), ('LARGELY_COMPLIANT', 'Largely Compliant'), ('PARTIALLY_COMPLIANT', 'Partially Compliant'), ('NON_COMPLIANT', 'Non-Compliant'), ('NOT_RATED', 'Not Rated')], default='NOT_RATED', max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('parent_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_regions', to='risk_scoring.region')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'region',
                'verbose_name_plural': 'regions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('assessment_type', models.CharField(choices=[('CUSTOMER', 'Customer Assessment'), ('TRANSACTION', 'Transaction Assessment'), ('PERIODIC', 'Periodic Review'), ('TRIGGERED', 'Triggered Review')], max_length=50)),
                ('risk_scores', models.JSONField(help_text='Category-wise risk scores')),
                ('overall_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], max_length=20)),
                ('assessment_date', models.DateTimeField()),
                ('next_review_date', models.DateTimeField()),
                ('factors_considered', models.JSONField(help_text='Risk factors considered in assessment')),
                ('mitigating_factors', models.JSONField(blank=True, help_text='Risk mitigating factors', null=True)),
                ('approval_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('ESCALATED', 'Escalated')], default='PENDING', max_length=20)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessments', to='customer_management.customer')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_assessments', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risk_assessments', to='transaction_monitoring.transaction')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'risk assessment',
                'verbose_name_plural': 'risk assessments',
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='RiskCategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('category_type', models.CharField(choices=[('CUSTOMER', 'Customer Risk'), ('TRANSACTION', 'Transaction Risk'), ('GEOGRAPHIC', 'Geographic Risk'), ('PRODUCT', 'Product Risk'), ('CHANNEL', 'Channel Risk'), ('BUSINESS', 'Business Risk')], max_length=50)),
                ('weight', models.FloatField(help_text='Category weight in overall risk calculation', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('risk_factors', models.JSONField(help_text='Risk factors and their weights')),
                ('scoring_method', models.CharField(choices=[('WEIGHTED_AVERAGE', 'Weighted Average'), ('MAXIMUM', 'Maximum Risk'), ('MULTIPLICATIVE', 'Multiplicative'), ('CUSTOM', 'Custom Formula')], max_length=50)),
                ('custom_formula', models.JSONField(blank=True, help_text='Custom scoring formula configuration', null=True)),
                ('thresholds', models.JSONField(help_text='Risk level thresholds')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'risk category',
                'verbose_name_plural': 'risk categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RiskFactor',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('CUSTOMER', 'Customer'), ('TRANSACTION', 'Transaction'), ('GEOGRAPHIC', 'Geographic'), ('PRODUCT', 'Product'), ('CHANNEL', 'Channel'), ('BUSINESS', 'Business')], max_length=50)),
                ('weight', models.FloatField(help_text='Weight factor (0-1)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'risk factor',
                'verbose_name_plural': 'risk factors',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RiskMatrix',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('matrix_type', models.CharField(choices=[('CUSTOMER', 'Customer Matrix'), ('TRANSACTION', 'Transaction Matrix'), ('PRODUCT', 'Product Matrix'), ('COMBINED', 'Combined Matrix')], max_length=50)),
                ('risk_levels', models.JSONField(help_text='Risk level definitions')),
                ('scoring_criteria', models.JSONField(help_text='Scoring criteria for each cell')),
                ('thresholds', models.JSONField(help_text='Threshold values for risk levels')),
                ('mitigation_rules', models.JSONField(blank=True, help_text='Risk mitigation rules', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'risk matrix',
                'verbose_name_plural': 'risk matrices',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RiskModelVersion',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('model_name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=20)),
                ('model_type', models.CharField(choices=[('SCORING', 'Scoring Model'), ('MATRIX', 'Risk Matrix'), ('RULES', 'Rule-based Model'), ('ML', 'Machine Learning Model')], max_length=50)),
                ('model_parameters', models.JSONField(help_text='Model parameters and configuration')),
                ('training_data', models.JSONField(blank=True, help_text='Training data summary', null=True)),
                ('performance_metrics', models.JSONField(help_text='Model performance metrics')),
                ('validation_results', models.JSONField(help_text='Model validation results')),
                ('is_active', models.BooleanField(default=True)),
                ('deployed_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deployed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deployed_models', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'risk model version',
                'verbose_name_plural': 'risk model versions',
                'ordering': ['-deployed_at'],
            },
        ),
        migrations.CreateModel(
            name='RiskScore',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('base_score', models.FloatField(help_text='Base risk score calculated from static factors')),
                ('ml_score', models.FloatField(help_text='Machine learning based risk score')),
                ('behavioral_score', models.FloatField(help_text='Score based on behavioral analysis')),
                ('risk_factors', models.JSONField(help_text='Detailed breakdown of risk factors')),
                ('historical_scores', models.JSONField(help_text='Historical risk score data')),
                ('last_assessment', models.DateTimeField(help_text='Timestamp of last risk assessment')),
                ('next_assessment', models.DateTimeField(help_text='Scheduled time for next assessment')),
                ('confidence_level', models.FloatField(help_text='Confidence level of the risk assessment')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer_management.customer')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Risk Score',
                'verbose_name_plural': 'Risk Scores',
            },
        ),
        migrations.AddIndex(
            model_name='eddrequest',
            index=models.Index(fields=['status', 'risk_level_at_request'], name='risk_scorin_status_1a3a0f_idx'),
        ),
        migrations.AddIndex(
            model_name='eddrequest',
            index=models.Index(fields=['request_date'], name='risk_scorin_request_6079b6_idx'),
        ),
        migrations.AddIndex(
            model_name='eddapproval',
            index=models.Index(fields=['decision'], name='risk_scorin_decisio_ff26b9_idx'),
        ),
        migrations.AddIndex(
            model_name='eddapproval',
            index=models.Index(fields=['approval_date'], name='risk_scorin_approva_e808f6_idx'),
        ),
        migrations.AddIndex(
            model_name='eddreview',
            index=models.Index(fields=['recommendation', 'risk_level_assessed'], name='risk_scorin_recomme_b4e94a_idx'),
        ),
        migrations.AddIndex(
            model_name='eddreview',
            index=models.Index(fields=['review_date'], name='risk_scorin_review__bef5cb_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['code'], name='risk_scorin_code_4ae455_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'risk_level'], name='risk_scorin_categor_ddda12_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='risk_scorin_is_acti_ba818d_idx'),
        ),
        migrations.AddIndex(
            model_name='region',
            index=models.Index(fields=['code'], name='risk_scorin_code_a2dc8b_idx'),
        ),
        migrations.AddIndex(
            model_name='region',
            index=models.Index(fields=['risk_level'], name='risk_scorin_risk_le_af6e98_idx'),
        ),
        migrations.AddIndex(
            model_name='riskassessment',
            index=models.Index(fields=['customer', '-assessment_date'], name='risk_scorin_custome_8a69e5_idx'),
        ),
        migrations.AddIndex(
            model_name='riskassessment',
            index=models.Index(fields=['risk_level', 'approval_status'], name='risk_scorin_risk_le_dd4c11_idx'),
        ),
        migrations.AddIndex(
            model_name='riskcategory',
            index=models.Index(fields=['category_type', 'is_active'], name='risk_scorin_categor_59f088_idx'),
        ),
        migrations.AddIndex(
            model_name='riskmatrix',
            index=models.Index(fields=['matrix_type', 'is_active'], name='risk_scorin_matrix__9e80ce_idx'),
        ),
        migrations.AddIndex(
            model_name='riskmodelversion',
            index=models.Index(fields=['model_type', 'is_active'], name='risk_scorin_model_t_7a5b35_idx'),
        ),
        migrations.AddIndex(
            model_name='riskmodelversion',
            index=models.Index(fields=['model_name', 'version'], name='risk_scorin_model_n_19cf54_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='riskmodelversion',
            unique_together={('model_name', 'version')},
        ),
        migrations.AddIndex(
            model_name='riskscore',
            index=models.Index(fields=['entity', 'base_score'], name='risk_scorin_entity__f2734e_idx'),
        ),
        migrations.AddIndex(
            model_name='riskscore',
            index=models.Index(fields=['last_assessment'], name='risk_scorin_last_as_273c22_idx'),
        ),
    ]
