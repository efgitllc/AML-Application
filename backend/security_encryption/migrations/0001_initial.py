# Generated by Django 5.2.4 on 2025-07-07 10:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EncryptionKey',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('key_type', models.CharField(choices=[('SYMMETRIC', 'Symmetric Key'), ('ASYMMETRIC', 'Asymmetric Key'), ('HMAC', 'HMAC Key'), ('MASTER', 'Master Key'), ('DATA', 'Data Key')], max_length=50)),
                ('algorithm', models.CharField(choices=[('AES_256', 'AES-256'), ('RSA_2048', 'RSA-2048'), ('RSA_4096', 'RSA-4096'), ('ED25519', 'ED25519'), ('CHACHA20', 'ChaCha20')], max_length=50)),
                ('key_material', models.BinaryField(help_text='Encrypted key material')),
                ('key_metadata', models.JSONField(help_text='Key metadata and attributes')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('COMPROMISED', 'Compromised'), ('ROTATED', 'Rotated'), ('ARCHIVED', 'Archived')], default='ACTIVE', max_length=20)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('rotation_period', models.DurationField(blank=True, null=True)),
                ('last_rotated', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_keys', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'encryption key',
                'verbose_name_plural': 'encryption keys',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EncryptedData',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('data_id', models.CharField(max_length=100, unique=True)),
                ('encrypted_data', models.BinaryField()),
                ('data_type', models.CharField(choices=[('PII', 'Personal Information'), ('FINANCIAL', 'Financial Data'), ('DOCUMENT', 'Document'), ('CREDENTIALS', 'Credentials'), ('OTHER', 'Other')], max_length=50)),
                ('encryption_algorithm', models.CharField(max_length=50)),
                ('iv', models.BinaryField(blank=True, null=True)),
                ('tag', models.BinaryField(blank=True, null=True)),
                ('additional_authenticated_data', models.BinaryField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('encryption_key', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='encrypted_data', to='security_encryption.encryptionkey')),
            ],
            options={
                'verbose_name': 'encrypted data',
                'verbose_name_plural': 'encrypted data',
            },
        ),
        migrations.CreateModel(
            name='SecurityAudit',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('event_type', models.CharField(choices=[('ACCESS', 'Access Event'), ('AUTHENTICATION', 'Authentication Event'), ('AUTHORIZATION', 'Authorization Event'), ('ENCRYPTION', 'Encryption Event'), ('CONFIGURATION', 'Configuration Change'), ('SECURITY', 'Security Event')], max_length=50)),
                ('severity', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], max_length=20)),
                ('event_data', models.JSONField(help_text='Detailed event information')),
                ('source_ip', models.GenericIPAddressField()),
                ('user_agent', models.CharField(max_length=500)),
                ('success', models.BooleanField()),
                ('failure_reason', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'security audit',
                'verbose_name_plural': 'security audits',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityAuditLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('event_id', models.CharField(max_length=100, unique=True)),
                ('event_type', models.CharField(choices=[('AUTH', 'Authentication'), ('ACCESS', 'Access Control'), ('ENCRYPTION', 'Encryption Operation'), ('KEY_MANAGEMENT', 'Key Management'), ('CONFIGURATION', 'Security Configuration'), ('VIOLATION', 'Security Violation'), ('OTHER', 'Other')], max_length=50)),
                ('severity', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], max_length=20)),
                ('source', models.CharField(max_length=100)),
                ('target_type', models.CharField(max_length=50)),
                ('target_id', models.CharField(max_length=100)),
                ('event_data', models.JSONField(help_text='Detailed event information')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILURE', 'Failure'), ('BLOCKED', 'Blocked'), ('UNKNOWN', 'Unknown')], max_length=20)),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_audit_actions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_audits_reviewed', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'security audit log',
                'verbose_name_plural': 'security audit logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityConfiguration',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('config_type', models.CharField(choices=[('PASSWORD_POLICY', 'Password Policy'), ('ACCESS_CONTROL', 'Access Control'), ('ENCRYPTION', 'Encryption Settings'), ('AUDIT', 'Audit Settings'), ('SESSION', 'Session Settings'), ('OTHER', 'Other')], max_length=50)),
                ('settings', models.JSONField(help_text='Configuration settings')),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.IntegerField(default=1)),
                ('last_modified_by', models.UUIDField()),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'security configuration',
                'verbose_name_plural': 'security configurations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SecurityControl',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('control_type', models.CharField(choices=[('PREVENTIVE', 'Preventive Control'), ('DETECTIVE', 'Detective Control'), ('CORRECTIVE', 'Corrective Control'), ('DETERRENT', 'Deterrent Control')], max_length=50)),
                ('description', models.TextField()),
                ('implementation', models.JSONField(help_text='Control implementation details')),
                ('effectiveness', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low'), ('UNKNOWN', 'Unknown')], max_length=20)),
                ('automated', models.BooleanField(help_text='Whether control is automated')),
                ('monitoring_config', models.JSONField(blank=True, help_text='Control monitoring configuration', null=True)),
                ('last_tested', models.DateTimeField(blank=True, null=True)),
                ('test_results', models.JSONField(blank=True, help_text='Latest test results', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'security control',
                'verbose_name_plural': 'security controls',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SecurityIncident',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('incident_id', models.CharField(max_length=100, unique=True)),
                ('incident_type', models.CharField(choices=[('UNAUTHORIZED_ACCESS', 'Unauthorized Access'), ('DATA_BREACH', 'Data Breach'), ('MALWARE', 'Malware'), ('POLICY_VIOLATION', 'Policy Violation'), ('SUSPICIOUS_ACTIVITY', 'Suspicious Activity'), ('OTHER', 'Other')], max_length=50)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('INVESTIGATING', 'Under Investigation'), ('CONTAINED', 'Contained'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='NEW', max_length=20)),
                ('description', models.TextField()),
                ('affected_systems', models.JSONField()),
                ('affected_data', models.JSONField(blank=True, null=True)),
                ('detection_source', models.CharField(max_length=100)),
                ('detection_date', models.DateTimeField()),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('mitigation_steps', models.JSONField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_incidents', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_incidents', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'security incident',
                'verbose_name_plural': 'security incidents',
                'ordering': ['-detection_date'],
            },
        ),
        migrations.CreateModel(
            name='SecurityPolicy',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('policy_type', models.CharField(choices=[('PASSWORD', 'Password Policy'), ('ACCESS', 'Access Control'), ('ENCRYPTION', 'Encryption Policy'), ('AUDIT', 'Audit Policy'), ('COMPLIANCE', 'Compliance Policy'), ('CUSTOM', 'Custom Policy')], max_length=50)),
                ('description', models.TextField()),
                ('policy_rules', models.JSONField(help_text='Policy rules and settings')),
                ('enforcement_level', models.CharField(choices=[('STRICT', 'Strict'), ('MODERATE', 'Moderate'), ('FLEXIBLE', 'Flexible'), ('ADVISORY', 'Advisory')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.CharField(max_length=20)),
                ('effective_from', models.DateTimeField()),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('last_reviewed', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_policies', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'security policy',
                'verbose_name_plural': 'security policies',
                'ordering': ['name', '-version'],
            },
        ),
        migrations.AddIndex(
            model_name='encryptionkey',
            index=models.Index(fields=['key_type', 'status'], name='security_en_key_typ_ff1441_idx'),
        ),
        migrations.AddIndex(
            model_name='encryptionkey',
            index=models.Index(fields=['algorithm'], name='security_en_algorit_eb73d1_idx'),
        ),
        migrations.AddIndex(
            model_name='encrypteddata',
            index=models.Index(fields=['data_id'], name='security_en_data_id_5637c8_idx'),
        ),
        migrations.AddIndex(
            model_name='encrypteddata',
            index=models.Index(fields=['data_type'], name='security_en_data_ty_4d80f3_idx'),
        ),
        migrations.AddIndex(
            model_name='securityaudit',
            index=models.Index(fields=['event_type', 'severity'], name='security_en_event_t_a0762c_idx'),
        ),
        migrations.AddIndex(
            model_name='securityaudit',
            index=models.Index(fields=['user', '-created_at'], name='security_en_user_id_9c3bee_idx'),
        ),
        migrations.AddIndex(
            model_name='securityaudit',
            index=models.Index(fields=['source_ip'], name='security_en_source__287e8f_idx'),
        ),
        migrations.AddIndex(
            model_name='securityauditlog',
            index=models.Index(fields=['event_type', 'severity'], name='security_en_event_t_400745_idx'),
        ),
        migrations.AddIndex(
            model_name='securityauditlog',
            index=models.Index(fields=['actor'], name='security_en_actor_i_5031e1_idx'),
        ),
        migrations.AddIndex(
            model_name='securityauditlog',
            index=models.Index(fields=['target_type', 'target_id'], name='security_en_target__f6c8bf_idx'),
        ),
        migrations.AddIndex(
            model_name='securityconfiguration',
            index=models.Index(fields=['config_type', 'is_active'], name='security_en_config__88c1be_idx'),
        ),
        migrations.AddIndex(
            model_name='securityconfiguration',
            index=models.Index(fields=['name', 'version'], name='security_en_name_ade82b_idx'),
        ),
        migrations.AddIndex(
            model_name='securitycontrol',
            index=models.Index(fields=['control_type', 'effectiveness'], name='security_en_control_c438d0_idx'),
        ),
        migrations.AddIndex(
            model_name='securitycontrol',
            index=models.Index(fields=['automated', 'is_active'], name='security_en_automat_3fe00b_idx'),
        ),
        migrations.AddIndex(
            model_name='securityincident',
            index=models.Index(fields=['incident_type', 'severity'], name='security_en_inciden_722719_idx'),
        ),
        migrations.AddIndex(
            model_name='securityincident',
            index=models.Index(fields=['status', 'assigned_to'], name='security_en_status_610d9c_idx'),
        ),
        migrations.AddIndex(
            model_name='securityincident',
            index=models.Index(fields=['incident_id'], name='security_en_inciden_4b3201_idx'),
        ),
        migrations.AddIndex(
            model_name='securitypolicy',
            index=models.Index(fields=['policy_type', 'is_active'], name='security_en_policy__476969_idx'),
        ),
        migrations.AddIndex(
            model_name='securitypolicy',
            index=models.Index(fields=['enforcement_level'], name='security_en_enforce_e84ef7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='securitypolicy',
            unique_together={('name', 'version')},
        ),
    ]
