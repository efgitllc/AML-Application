# Generated by Django 5.2.4 on 2025-07-07 10:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('layout', models.JSONField(help_text='Dashboard layout configuration')),
                ('filters', models.JSONField(help_text='Dashboard filters configuration')),
                ('is_public', models.BooleanField(default=False)),
                ('is_template', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ui_dashboard_created', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ui_owned_dashboards', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='ui_shared_dashboards', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ui_dashboard_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UI dashboard',
                'verbose_name_plural': 'UI dashboards',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('colors', models.JSONField(help_text='Theme color palette')),
                ('typography', models.JSONField(help_text='Typography configuration')),
                ('components', models.JSONField(help_text='Component style configuration')),
                ('layout', models.JSONField(help_text='Layout configuration')),
                ('is_system', models.BooleanField(default=False, help_text='Whether this is a system theme')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_themes', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'theme',
                'verbose_name_plural': 'themes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('language', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic'), ('fr', 'French'), ('es', 'Spanish'), ('zh', 'Chinese')], default='en', max_length=10)),
                ('timezone', models.CharField(max_length=50)),
                ('date_format', models.CharField(max_length=50)),
                ('time_format', models.CharField(max_length=50)),
                ('notifications', models.JSONField(help_text='Notification preferences')),
                ('accessibility', models.JSONField(blank=True, help_text='Accessibility settings', null=True)),
                ('dashboard_preferences', models.JSONField(help_text='Dashboard display preferences')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('theme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_preferences', to='ui_dashboard.theme')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ui_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user preference',
                'verbose_name_plural': 'user preferences',
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('widget_type', models.CharField(choices=[('CHART', 'Chart'), ('TABLE', 'Table'), ('METRIC', 'Metric'), ('MAP', 'Geographic Map'), ('HEATMAP', 'Heat Map'), ('ALERT', 'Alert Widget'), ('CUSTOM', 'Custom Widget')], max_length=50)),
                ('data_source', models.JSONField(help_text='Widget data source configuration')),
                ('visualization', models.JSONField(help_text='Widget visualization settings')),
                ('filters', models.JSONField(blank=True, help_text='Widget-specific filters', null=True)),
                ('refresh_interval', models.IntegerField(default=300, help_text='Widget refresh interval in seconds')),
                ('position', models.JSONField(help_text='Widget position in dashboard grid')),
                ('size', models.JSONField(help_text='Widget size configuration')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='ui_dashboard.dashboard')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'widget',
                'verbose_name_plural': 'widgets',
                'ordering': ['dashboard', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ChartConfiguration',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('chart_type', models.CharField(choices=[('LINE', 'Line Chart'), ('BAR', 'Bar Chart'), ('PIE', 'Pie Chart'), ('SCATTER', 'Scatter Plot'), ('AREA', 'Area Chart'), ('RADAR', 'Radar Chart'), ('CUSTOM', 'Custom Chart')], max_length=50)),
                ('x_axis', models.JSONField(help_text='X-axis configuration')),
                ('y_axis', models.JSONField(help_text='Y-axis configuration')),
                ('series', models.JSONField(help_text='Chart series configuration')),
                ('colors', models.JSONField(help_text='Chart color scheme')),
                ('legend', models.JSONField(blank=True, help_text='Legend configuration', null=True)),
                ('animations', models.JSONField(blank=True, help_text='Animation settings', null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('widget', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chart_config', to='ui_dashboard.widget')),
            ],
            options={
                'verbose_name': 'chart configuration',
                'verbose_name_plural': 'chart configurations',
            },
        ),
        migrations.CreateModel(
            name='WidgetAlert',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('alert_type', models.CharField(choices=[('THRESHOLD', 'Threshold Alert'), ('TREND', 'Trend Alert'), ('ANOMALY', 'Anomaly Alert'), ('CUSTOM', 'Custom Alert')], max_length=50)),
                ('conditions', models.JSONField(help_text='Alert trigger conditions')),
                ('notification_config', models.JSONField(help_text='Notification configuration')),
                ('is_active', models.BooleanField(default=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('widget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='ui_dashboard.widget')),
            ],
            options={
                'verbose_name': 'widget alert',
                'verbose_name_plural': 'widget alerts',
                'ordering': ['widget', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DashboardSnapshot',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('snapshot_id', models.CharField(max_length=100, unique=True)),
                ('timestamp', models.DateTimeField()),
                ('data', models.JSONField(help_text='Snapshot data')),
                ('filters_applied', models.JSONField(blank=True, help_text='Filters active during snapshot', null=True)),
                ('created_by', models.UUIDField()),
                ('reason', models.TextField(blank=True)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='ui_dashboard.dashboard')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'dashboard snapshot',
                'verbose_name_plural': 'dashboard snapshots',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['dashboard', '-timestamp'], name='ui_dashboar_dashboa_4bc7f5_idx'), models.Index(fields=['snapshot_id'], name='ui_dashboar_snapsho_074c98_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='theme',
            index=models.Index(fields=['is_system', 'is_active'], name='ui_dashboar_is_syst_1e2bd0_idx'),
        ),
        migrations.AddIndex(
            model_name='userpreference',
            index=models.Index(fields=['user', 'language'], name='ui_dashboar_user_id_0bcfb5_idx'),
        ),
        migrations.AddIndex(
            model_name='widget',
            index=models.Index(fields=['dashboard', 'widget_type'], name='ui_dashboar_dashboa_64a57d_idx'),
        ),
        migrations.AddIndex(
            model_name='chartconfiguration',
            index=models.Index(fields=['widget', 'chart_type'], name='ui_dashboar_widget__536f07_idx'),
        ),
        migrations.AddIndex(
            model_name='widgetalert',
            index=models.Index(fields=['widget', 'alert_type'], name='ui_dashboar_widget__801b5b_idx'),
        ),
        migrations.AddIndex(
            model_name='widgetalert',
            index=models.Index(fields=['is_active'], name='ui_dashboar_is_acti_ad438d_idx'),
        ),
    ]
