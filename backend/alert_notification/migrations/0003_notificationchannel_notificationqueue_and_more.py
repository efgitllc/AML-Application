# Generated by Django 5.2.4 on 2025-07-09 11:01

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('alert_notification', '0002_initial'),
        ('case_management', '0001_initial'),
        ('transaction_monitoring', '0003_monitoringrule_transactionalert'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('channel_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('WEBHOOK', 'Webhook'), ('SLACK', 'Slack'), ('TEAMS', 'Microsoft Teams')], max_length=50)),
                ('configuration', models.JSONField(default=dict, help_text='Channel-specific configuration settings')),
                ('is_active', models.BooleanField(default=True)),
                ('rate_limit', models.JSONField(default=dict, help_text='Rate limiting configuration')),
            ],
            options={
                'verbose_name': 'notification channel',
                'verbose_name_plural': 'notification channels',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('scheduled_time', models.DateTimeField()),
                ('priority', models.IntegerField(default=5, help_text='Priority level (1=highest, 10=lowest)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('status', models.CharField(choices=[('QUEUED', 'Queued'), ('PROCESSING', 'Processing'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='QUEUED', max_length=20)),
                ('attempts', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('last_error', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'notification queue',
                'verbose_name_plural': 'notification queues',
                'ordering': ['priority', 'scheduled_time'],
            },
        ),
        migrations.RemoveIndex(
            model_name='notification',
            name='alert_notif_status_b70016_idx',
        ),
        migrations.RemoveIndex(
            model_name='notification',
            name='alert_notif_notific_6d94a6_idx',
        ),
        migrations.RenameIndex(
            model_name='notificationpreference',
            new_name='alert_notif_user_id_8c7ba7_idx',
            old_name='alert_notif_user_e2e5f3_idx',
        ),
        migrations.AddField(
            model_name='notification',
            name='max_retries',
            field=models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AddField(
            model_name='notification',
            name='retry_count',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='notification',
            name='metadata',
            field=models.JSONField(default=dict, help_text='Additional notification metadata'),
        ),
        migrations.AlterField(
            model_name='notificationpreference',
            name='device_tokens',
            field=models.JSONField(default=list, help_text='Push notification device tokens'),
        ),
        migrations.AlterField(
            model_name='notificationpreference',
            name='quiet_hours',
            field=models.JSONField(default=dict, help_text='Do not disturb time windows'),
        ),
        migrations.AlterField(
            model_name='notificationpreference',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='notificationrule',
            name='conditions',
            field=models.JSONField(default=dict, help_text='Conditions that trigger the notification'),
        ),
        migrations.AlterField(
            model_name='notificationrule',
            name='event_type',
            field=models.CharField(choices=[('ALERT_CREATED', 'Alert Created'), ('ALERT_UPDATED', 'Alert Updated'), ('CASE_CREATED', 'Case Created'), ('CASE_UPDATED', 'Case Updated'), ('CASE_ASSIGNED', 'Case Assigned'), ('TASK_ASSIGNED', 'Task Assigned'), ('DEADLINE_APPROACHING', 'Deadline Approaching'), ('STATUS_CHANGE', 'Status Changed'), ('RISK_LEVEL_CHANGE', 'Risk Level Changed'), ('DOCUMENT_EXPIRED', 'Document Expired'), ('THRESHOLD_EXCEEDED', 'Threshold Exceeded')], max_length=50),
        ),
        migrations.AlterField(
            model_name='notificationrule',
            name='recipient_rules',
            field=models.JSONField(default=dict, help_text='Rules for determining notification recipients'),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='category',
            field=models.CharField(choices=[('ALERT', 'Alert Notification'), ('CASE', 'Case Update'), ('TASK', 'Task Assignment'), ('REVIEW', 'Review Required'), ('SYSTEM', 'System Notification'), ('COMPLIANCE', 'Compliance Alert'), ('OTHER', 'Other')], max_length=50),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='placeholders',
            field=models.JSONField(default=dict, help_text='List of available placeholders and their descriptions'),
        ),
        migrations.AlterField(
            model_name='websocketconnection',
            name='client_info',
            field=models.JSONField(default=dict, help_text='Client device/browser information'),
        ),
        migrations.AlterField(
            model_name='websocketconnection',
            name='subscribed_channels',
            field=models.JSONField(default=list, help_text='List of subscribed notification channels'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'status'], name='alert_notif_notific_8dd847_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'status'], name='alert_notif_priorit_a28e44_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['requires_action', 'action_deadline'], name='alert_notif_require_37d91c_idx'),
        ),
        migrations.AddField(
            model_name='notificationchannel',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationchannel',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationqueue',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queued_notifications', to='alert_notification.notificationchannel'),
        ),
        migrations.AddField(
            model_name='notificationqueue',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationqueue',
            name='notification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entries', to='alert_notification.notification'),
        ),
        migrations.AddField(
            model_name='notificationqueue',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='notificationchannel',
            index=models.Index(fields=['channel_type', 'is_active'], name='alert_notif_channel_149ce9_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['status', 'scheduled_time'], name='alert_notif_status_386530_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['priority', 'scheduled_time'], name='alert_notif_priorit_f6cd9c_idx'),
        ),
    ]
