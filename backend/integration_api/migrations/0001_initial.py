# Generated by Django 5.2.4 on 2025-07-07 10:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIClient',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(help_text='Name of the API client', max_length=100)),
                ('api_key', models.CharField(help_text='Unique API key for authentication', max_length=64, unique=True)),
                ('api_secret', models.CharField(help_text='API secret for request signing', max_length=256)),
                ('allowed_endpoints', models.JSONField(help_text='List of allowed API endpoints and methods')),
                ('rate_limit', models.IntegerField(default=60, help_text='Maximum requests per minute')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this API client is active')),
                ('last_access', models.DateTimeField(blank=True, help_text='Last API access timestamp', null=True)),
                ('ip_whitelist', models.JSONField(blank=True, help_text='List of allowed IP addresses', null=True)),
                ('access_level', models.CharField(choices=[('READ', 'Read Only'), ('WRITE', 'Read Write'), ('ADMIN', 'Administrative')], default='READ', help_text='API access level', max_length=20)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='API key expiration date', null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Client',
                'verbose_name_plural': 'API Clients',
            },
        ),
        migrations.CreateModel(
            name='APIAccessLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('endpoint', models.CharField(help_text='Accessed API endpoint', max_length=255)),
                ('method', models.CharField(help_text='HTTP method used', max_length=10)),
                ('ip_address', models.GenericIPAddressField(help_text='Client IP address')),
                ('request_data', models.JSONField(blank=True, help_text='Request payload data', null=True)),
                ('response_status', models.IntegerField(help_text='HTTP response status code')),
                ('response_time', models.FloatField(help_text='Request processing time in seconds')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(help_text='API client making the request', on_delete=django.db.models.deletion.CASCADE, to='integration_api.apiclient')),
            ],
            options={
                'verbose_name': 'API Access Log',
                'verbose_name_plural': 'API Access Logs',
            },
        ),
        migrations.CreateModel(
            name='BatchJob',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('job_type', models.CharField(choices=[('IMPORT', 'Data Import'), ('EXPORT', 'Data Export'), ('SYNC', 'Data Synchronization'), ('PROCESS', 'Batch Processing'), ('CLEANUP', 'Data Cleanup')], max_length=50)),
                ('schedule', models.JSONField(help_text='Job schedule configuration')),
                ('filters', models.JSONField(blank=True, help_text='Data filtering criteria', null=True)),
                ('batch_size', models.IntegerField(default=1000)),
                ('timeout', models.IntegerField(default=3600, help_text='Job timeout in seconds')),
                ('retry_config', models.JSONField(help_text='Retry configuration for failed jobs')),
                ('notification_config', models.JSONField(blank=True, help_text='Notification settings for job status', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'batch job',
                'verbose_name_plural': 'batch jobs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BatchJobExecution',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('execution_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=50)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_records', models.IntegerField(default=0)),
                ('processed_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('error_details', models.JSONField(blank=True, help_text='Details of any errors encountered', null=True)),
                ('performance_metrics', models.JSONField(blank=True, help_text='Job performance metrics', null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='integration_api.batchjob')),
                ('triggered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_jobs', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'batch job execution',
                'verbose_name_plural': 'batch job executions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='DataMapping',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('mapping_type', models.CharField(choices=[('CUSTOMER', 'Customer Data'), ('TRANSACTION', 'Transaction Data'), ('DOCUMENT', 'Document Data'), ('RISK', 'Risk Data'), ('CUSTOM', 'Custom Data')], max_length=50)),
                ('field_mappings', models.JSONField(help_text='Field mapping configurations')),
                ('transformation_rules', models.JSONField(blank=True, help_text='Data transformation rules', null=True)),
                ('validation_rules', models.JSONField(blank=True, help_text='Data validation rules', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'data mapping',
                'verbose_name_plural': 'data mappings',
                'ordering': ['source_system', 'mapping_type'],
            },
        ),
        migrations.AddField(
            model_name='batchjob',
            name='data_mapping',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batch_jobs', to='integration_api.datamapping'),
        ),
        migrations.CreateModel(
            name='ExternalSystem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('system_type', models.CharField(choices=[('BANKING', 'Banking System'), ('KYC', 'KYC Provider'), ('SCREENING', 'Screening Database'), ('REGULATORY', 'Regulatory System'), ('PAYMENT', 'Payment System'), ('CUSTOM', 'Custom Integration')], max_length=50)),
                ('description', models.TextField()),
                ('base_url', models.URLField()),
                ('auth_type', models.CharField(choices=[('API_KEY', 'API Key'), ('OAUTH2', 'OAuth 2.0'), ('JWT', 'JWT Token'), ('BASIC', 'Basic Auth'), ('CERT', 'Certificate')], max_length=50)),
                ('auth_credentials', models.JSONField(help_text='Encrypted authentication credentials')),
                ('connection_params', models.JSONField(help_text='Additional connection parameters')),
                ('rate_limit', models.JSONField(blank=True, help_text='Rate limiting configuration', null=True)),
                ('timeout_settings', models.JSONField(help_text='Timeout and retry settings')),
                ('is_active', models.BooleanField(default=True)),
                ('health_check_url', models.CharField(blank=True, max_length=200)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'external system',
                'verbose_name_plural': 'external systems',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='datamapping',
            name='source_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_mappings', to='integration_api.externalsystem'),
        ),
        migrations.AddField(
            model_name='datamapping',
            name='target_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_mappings', to='integration_api.externalsystem'),
        ),
        migrations.AddField(
            model_name='batchjob',
            name='source_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_jobs', to='integration_api.externalsystem'),
        ),
        migrations.AddField(
            model_name='batchjob',
            name='target_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_jobs', to='integration_api.externalsystem'),
        ),
        migrations.CreateModel(
            name='APIEndpoint',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata')),
                ('hash', models.CharField(blank=True, help_text='SHA-256 hash of critical fields', max_length=64)),
                ('name', models.CharField(max_length=100)),
                ('endpoint_url', models.CharField(max_length=200)),
                ('http_method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE')], max_length=10)),
                ('request_schema', models.JSONField(help_text='Expected request payload schema')),
                ('response_schema', models.JSONField(help_text='Expected response schema')),
                ('headers', models.JSONField(blank=True, help_text='Custom headers for endpoint', null=True)),
                ('query_params', models.JSONField(blank=True, help_text='Query parameter definitions', null=True)),
                ('retry_config', models.JSONField(blank=True, help_text='Retry configuration for endpoint', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endpoints', to='integration_api.externalsystem')),
            ],
            options={
                'verbose_name': 'API endpoint',
                'verbose_name_plural': 'API endpoints',
                'ordering': ['system', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='apiclient',
            index=models.Index(fields=['api_key'], name='integration_api_key_ca4352_idx'),
        ),
        migrations.AddIndex(
            model_name='apiclient',
            index=models.Index(fields=['is_active'], name='integration_is_acti_47c9d1_idx'),
        ),
        migrations.AddIndex(
            model_name='apiaccesslog',
            index=models.Index(fields=['client', 'endpoint'], name='integration_client__418320_idx'),
        ),
        migrations.AddIndex(
            model_name='apiaccesslog',
            index=models.Index(fields=['created_at'], name='integration_created_74f672_idx'),
        ),
        migrations.AddIndex(
            model_name='batchjobexecution',
            index=models.Index(fields=['job', '-start_time'], name='integration_job_id_97b848_idx'),
        ),
        migrations.AddIndex(
            model_name='batchjobexecution',
            index=models.Index(fields=['status'], name='integration_status_3fc597_idx'),
        ),
        migrations.AddIndex(
            model_name='batchjobexecution',
            index=models.Index(fields=['execution_id'], name='integration_executi_865c27_idx'),
        ),
        migrations.AddIndex(
            model_name='externalsystem',
            index=models.Index(fields=['system_type', 'is_active'], name='integration_system__8605e6_idx'),
        ),
        migrations.AddIndex(
            model_name='datamapping',
            index=models.Index(fields=['source_system', 'target_system'], name='integration_source__c92daf_idx'),
        ),
        migrations.AddIndex(
            model_name='datamapping',
            index=models.Index(fields=['mapping_type', 'is_active'], name='integration_mapping_1e05d8_idx'),
        ),
        migrations.AddIndex(
            model_name='batchjob',
            index=models.Index(fields=['job_type', 'is_active'], name='integration_job_typ_d10051_idx'),
        ),
        migrations.AddIndex(
            model_name='batchjob',
            index=models.Index(fields=['source_system', 'target_system'], name='integration_source__e9875c_idx'),
        ),
        migrations.AddIndex(
            model_name='apiendpoint',
            index=models.Index(fields=['system', 'is_active'], name='integration_system__0bd55e_idx'),
        ),
        migrations.AddIndex(
            model_name='apiendpoint',
            index=models.Index(fields=['http_method'], name='integration_http_me_9952dd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='apiendpoint',
            unique_together={('system', 'endpoint_url', 'http_method')},
        ),
    ]
